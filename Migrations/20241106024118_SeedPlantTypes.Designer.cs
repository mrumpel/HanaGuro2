// <auto-generated />
using HanaGuro2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HanaGuro2.Migrations
{
    [DbContext(typeof(PlantDbContext))]
    [Migration("20241106024118_SeedPlantTypes")]
    partial class SeedPlantTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1");

            modelBuilder.Entity("HanaGuro2.Models.Biome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Biomes");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Name = "Desert"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Grassland"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Forest"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mountain"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Jungle"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Garden"
                        });
                });

            modelBuilder.Entity("HanaGuro2.Models.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BiomeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BiomeId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("HanaGuro2.Models.PlantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlantTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageKey = "Chlorophytum",
                            Name = "Chlorophytum"
                        },
                        new
                        {
                            Id = 2,
                            ImageKey = "Echeveria",
                            Name = "Echeveria"
                        },
                        new
                        {
                            Id = 3,
                            ImageKey = "Ficus",
                            Name = "Ficus"
                        },
                        new
                        {
                            Id = 4,
                            ImageKey = "Monstera",
                            Name = "Monstera"
                        },
                        new
                        {
                            Id = 5,
                            ImageKey = "Saintpaula",
                            Name = "Saintpaulia"
                        });
                });

            modelBuilder.Entity("HanaGuro2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HanaGuro2.Models.Plant", b =>
                {
                    b.HasOne("HanaGuro2.Models.Biome", "Biome")
                        .WithMany()
                        .HasForeignKey("BiomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HanaGuro2.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HanaGuro2.Models.PlantType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Biome");

                    b.Navigation("Owner");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
